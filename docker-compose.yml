version: "3.9"

services:
  db:
    container_name: shop-db
    image: postgres:15
    hostname: "psql_docker"
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "1234"
      PGDATA: /data/postgres
    volumes:
      - postgres:/data/postgres
      - ./shop-server/sql/create_tables.sql:/docker-entrypoint-initdb.d/create_tables.sql
      - ./shop-server/sql/fill_tables.sql:/docker-entrypoint-initdb.d/fill_tables.sql
    networks:
      - postgres
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -d postgres -U postgres" ]
      interval: 30s
      timeout: 60s
      retries: 5
      start_period: 80s
    
  elasticsearch:
    container_name: shop-elasticsearch
    image: docker.elastic.co/elasticsearch/elasticsearch:7.17.25
    hostname: "elasticsearch_docker"
    environment:
      discovery.type: single-node
    ports:
      - "9200:9200"
    networks:
      - postgres
    healthcheck:
      test: curl -s http://elasticsearch:9200 >/dev/null || exit 1
      interval: 30s
      timeout: 10s
      retries: 50

  logstash:
    container_name: shop-logstash
    build: ./logstash
    ports:
      - "5000:5000"
    networks:
      - postgres
    environment:
      CONFIG_SUPPORT_ESCAPE: true
      ELASTICSEARCH_URL: http://elasticsearch:9200
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: "1234"
      POSTGRES_URL: jdbc:postgresql://db:5432/postgres
    depends_on:
      db:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    volumes:
      - logstashvolume:/usr/share/logstash/data

  api:
    depends_on:
      - "db"
      - "elasticsearch"
    container_name: shop-server
    build: ./shop-server
    ports:
      - "8080:8080"
    networks:
      - postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=1234
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - ES_URL=elasticsearch:9200
      - SPRING_ELASTICSEARCH_URIS=elasticsearch:9200

  front:
    container_name: shop-client
    build: ./shop-client
    ports:
      - "4200:4200"

networks:
  postgres:
    driver: bridge

volumes:
  postgres:
  logstashvolume:
